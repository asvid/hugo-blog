<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Adapter Pattern on Adam Coding Corner</title>
    <link>//localhost:1313/tags/adapter-pattern/</link>
    <description>Recent content in Adapter Pattern on Adam Coding Corner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Jun 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/tags/adapter-pattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Adapter Pattern in Kotlin</title>
      <link>//localhost:1313/kotlin-adapter-pattern/</link>
      <pubDate>Sat, 26 Jun 2021 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/kotlin-adapter-pattern/</guid>
      <description>The Adapter or Wrapper Pattern allows you to &lt;code&gt;translate&lt;/code&gt; one interface into another, expected by the client class. It is especially useful when the adapted object comes from 3rd party library, and you do not want to make your system depending on that interface, creating the so-called &lt;code&gt;anticorruption layer&lt;/code&gt;. Adaptee interface changes will only affect the &lt;code&gt;Adapter&lt;/code&gt; and not the rest of the code.</description>
    </item>
  </channel>
</rss>
