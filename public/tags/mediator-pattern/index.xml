<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mediator Pattern on Adam Coding Corner</title>
    <link>//localhost:1313/tags/mediator-pattern/</link>
    <description>Recent content in Mediator Pattern on Adam Coding Corner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Jul 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/tags/mediator-pattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mediator in Kotlin</title>
      <link>//localhost:1313/kotlin_mediator_pattern/</link>
      <pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/kotlin_mediator_pattern/</guid>
      <description>The Mediator&amp;rsquo;s job is to organize communication between close classes. The &lt;code&gt;Mediator&lt;/code&gt; pattern cuts out dependencies between components. It takes over the interaction between them, becoming the main communication hub for a group of classes. There is a reverse of the controls because components are now just telling &amp;lsquo;what happened&amp;rsquo; instead of telling others to &amp;lsquo;do something&amp;rsquo;. It can be found e.g. in the form of &lt;code&gt;ViewModel&lt;/code&gt; in Android, where it separates UI interactions from data model changes.</description>
    </item>
  </channel>
</rss>
