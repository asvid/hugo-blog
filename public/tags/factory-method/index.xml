<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Factory Method on My New Hugo Site</title>
    <link>http://localhost:1313/tags/factory-method/</link>
    <description>Recent content in Factory Method on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Feb 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/factory-method/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kotlin Factory Method</title>
      <link>http://localhost:1313/kotlin-factory-method/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/kotlin-factory-method/</guid>
      <description>Purpose Just like Builder, the Factory is a creational pattern. It describes an interface used to deliver instances. Instead of calling object constructor, we can call a method of the Factory which will generate interface implementation - the concrete object. What makes it different from Builder is that usually none or very few arguments need to be passed. It&amp;rsquo;s Factory&amp;rsquo;s job to fulfill all required by the object dependencies.&#xA;Factory can deliver objects of various types implementing the same interface just by the passed arguments.</description>
    </item>
  </channel>
</rss>
