<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Template Method on My New Hugo Site</title>
    <link>http://localhost:1313/tags/template-method/</link>
    <description>Recent content in Template Method on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 13 May 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/template-method/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kotlin Template Method</title>
      <link>http://localhost:1313/kotlin-template-method/</link>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/kotlin-template-method/</guid>
      <description>Purpose The template method is a very simple design pattern, that separates the shared class parts from distinctive ones. The core idea is to have an abstract parent class containing the algorithm steps and allowing inheriting classes to overwrite individual steps, but not the algorithm that uses those steps itself.&#xA;Think about Pizza - steps to make it are more-less the same, despite the type of pizza. You need to make a dough, apply sauce and ingredients, and finally bake it.</description>
    </item>
  </channel>
</rss>
