<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Modularization on My New Hugo Site</title>
    <link>http://localhost:1313/tags/modularization/</link>
    <description>Recent content in Modularization on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Jan 2019 18:57:02 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/modularization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overlibrarization</title>
      <link>http://localhost:1313/overlibrarization/</link>
      <pubDate>Sun, 20 Jan 2019 18:57:02 +0000</pubDate>
      <guid>http://localhost:1313/overlibrarization/</guid>
      <description>It seems great Write code once use it many times. Creating smaller pieces of code forces developers to write encapsulated software that follows single responsibility principle and is easy to test. Such code piece (AKA module) can be then published as a versioned artifact - a private library, that can be reused in more than one project. We are getting quality and reusability, how cool is that! Well that&amp;rsquo;s the theory.</description>
    </item>
    <item>
      <title>Android local libraries with Maven</title>
      <link>http://localhost:1313/android-local-maven/</link>
      <pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/android-local-maven/</guid>
      <description>Intro Have you ever created Android library? You know, when you are working on specific functionality in some project and get enlightenment &amp;ldquo;hey, I could use this in some other project!&amp;rdquo;. No? Well&amp;hellip; you should - at least sometimes :) I don&amp;rsquo;t mean creating new ultimate architecture framework every week (we are not JavaScript developers after all), but writing simple tools that you know how to use and that will make your work easer on future projects.</description>
    </item>
  </channel>
</rss>
